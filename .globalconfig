is_global = true

# Global analyzer configuration
# These rules apply to all projects in the solution

###############################
# Code Analysis Rules         #
###############################

# Microsoft.CodeAnalysis.NetAnalyzers
global_level = 99

# CA1000: Do not declare static members on generic types
dotnet_diagnostic.CA1000.severity = suggestion

# CA1001: Types that own disposable fields should be disposable
dotnet_diagnostic.CA1001.severity = warning

# CA1002: Do not expose generic lists
dotnet_diagnostic.CA1002.severity = suggestion

# CA1003: Use generic event handler instances
dotnet_diagnostic.CA1003.severity = suggestion

# CA1005: Avoid excessive parameters on generic types
dotnet_diagnostic.CA1005.severity = suggestion

# CA1008: Enums should have zero value
dotnet_diagnostic.CA1008.severity = suggestion

# CA1010: Collections should implement generic interface
dotnet_diagnostic.CA1010.severity = suggestion

# CA1012: Abstract types should not have constructors
dotnet_diagnostic.CA1012.severity = suggestion

# CA1014: Mark assemblies with CLSCompliant
dotnet_diagnostic.CA1014.severity = none

# CA1016: Mark assemblies with assembly version
dotnet_diagnostic.CA1016.severity = suggestion

# CA1017: Mark assemblies with ComVisible
dotnet_diagnostic.CA1017.severity = none

# CA1018: Mark attributes with AttributeUsageAttribute
dotnet_diagnostic.CA1018.severity = warning

# CA1019: Define accessors for attribute arguments
dotnet_diagnostic.CA1019.severity = suggestion

# CA1021: Avoid out parameters
dotnet_diagnostic.CA1021.severity = suggestion

# CA1024: Use properties where appropriate
dotnet_diagnostic.CA1024.severity = suggestion

# CA1027: Mark enums with FlagsAttribute
dotnet_diagnostic.CA1027.severity = suggestion

# CA1028: Enum Storage should be Int32
dotnet_diagnostic.CA1028.severity = suggestion

# CA1030: Use events where appropriate
dotnet_diagnostic.CA1030.severity = suggestion

# CA1033: Interface methods should be callable by child types
dotnet_diagnostic.CA1033.severity = suggestion

# CA1036: Override methods on comparable types
dotnet_diagnostic.CA1036.severity = suggestion

# CA1040: Avoid empty interfaces
dotnet_diagnostic.CA1040.severity = suggestion

# CA1041: Provide ObsoleteAttribute message
dotnet_diagnostic.CA1041.severity = warning

# CA1043: Use Integral Or String Argument For Indexers
dotnet_diagnostic.CA1043.severity = suggestion

# CA1044: Properties should not be write only
dotnet_diagnostic.CA1044.severity = suggestion

# CA1045: Do not pass types by reference
dotnet_diagnostic.CA1045.severity = suggestion

# CA1046: Do not overload equality operator on reference types
dotnet_diagnostic.CA1046.severity = suggestion

# CA1047: Do not declare protected member in sealed type
dotnet_diagnostic.CA1047.severity = warning

# CA1050: Declare types in namespaces
dotnet_diagnostic.CA1050.severity = warning

# CA1051: Do not declare visible instance fields
dotnet_diagnostic.CA1051.severity = suggestion

# CA1052: Static holder types should be Static or NotInheritable
dotnet_diagnostic.CA1052.severity = suggestion

# CA1054: Uri parameters should not be strings
dotnet_diagnostic.CA1054.severity = suggestion

# CA1055: Uri return values should not be strings
dotnet_diagnostic.CA1055.severity = suggestion

# CA1056: Uri properties should not be strings
dotnet_diagnostic.CA1056.severity = suggestion

# CA1058: Types should not extend certain base types
dotnet_diagnostic.CA1058.severity = suggestion

# CA1060: Move pinvokes to native methods class
dotnet_diagnostic.CA1060.severity = suggestion

# CA1061: Do not hide base class methods
dotnet_diagnostic.CA1061.severity = warning

# CA1063: Implement IDisposable Correctly
dotnet_diagnostic.CA1063.severity = warning

# CA1064: Exceptions should be public
dotnet_diagnostic.CA1064.severity = warning

# CA1065: Do not raise exceptions in unexpected locations
dotnet_diagnostic.CA1065.severity = warning

# CA1066: Type {0} should implement IEquatable<T> because it overrides Equals
dotnet_diagnostic.CA1066.severity = suggestion

# CA1067: Override Object.Equals(object) when implementing IEquatable<T>
dotnet_diagnostic.CA1067.severity = warning

# CA1068: CancellationToken parameters must come last
dotnet_diagnostic.CA1068.severity = warning

# CA1069: Enums values should not be duplicated
dotnet_diagnostic.CA1069.severity = warning

# CA1070: Do not declare event fields as virtual
dotnet_diagnostic.CA1070.severity = warning

###############################
# Maintainability Rules       #
###############################

# CA1501: Avoid excessive inheritance
dotnet_diagnostic.CA1501.severity = suggestion

# CA1502: Avoid excessive complexity
dotnet_diagnostic.CA1502.severity = suggestion

# CA1505: Avoid unmaintainable code
dotnet_diagnostic.CA1505.severity = suggestion

# CA1506: Avoid excessive class coupling
dotnet_diagnostic.CA1506.severity = suggestion

# CA1507: Use nameof to express symbol names
dotnet_diagnostic.CA1507.severity = suggestion

# CA1508: Avoid dead conditional code
dotnet_diagnostic.CA1508.severity = suggestion

# CA1509: Invalid entry in code metrics rule specification file
dotnet_diagnostic.CA1509.severity = warning

###############################
# Naming Rules                 #
###############################

# CA1700: Do not name enum values 'Reserved'
dotnet_diagnostic.CA1700.severity = suggestion

# CA1707: Identifiers should not contain underscores
dotnet_diagnostic.CA1707.severity = none

# CA1708: Identifiers should differ by more than case
dotnet_diagnostic.CA1708.severity = suggestion

# CA1710: Identifiers should have correct suffix
dotnet_diagnostic.CA1710.severity = suggestion

# CA1711: Identifiers should not have incorrect suffix
dotnet_diagnostic.CA1711.severity = suggestion

# CA1712: Do not prefix enum values with type name
dotnet_diagnostic.CA1712.severity = suggestion

# CA1713: Events should not have 'Before' or 'After' prefix
dotnet_diagnostic.CA1713.severity = suggestion

# CA1714: Flags enums should have plural names
dotnet_diagnostic.CA1714.severity = suggestion

# CA1715: Identifiers should have correct prefix
dotnet_diagnostic.CA1715.severity = suggestion

# CA1717: Only FlagsAttribute enums should have plural names
dotnet_diagnostic.CA1717.severity = suggestion

# CA1720: Identifier contains type name
dotnet_diagnostic.CA1720.severity = suggestion

# CA1721: Property names should not match get methods
dotnet_diagnostic.CA1721.severity = suggestion

# CA1724: Type names should not match namespaces
dotnet_diagnostic.CA1724.severity = suggestion

# CA1725: Parameter names should match base declaration
dotnet_diagnostic.CA1725.severity = suggestion

###############################
# Performance Rules            #
###############################

# CA1800: Do not cast unnecessarily
dotnet_diagnostic.CA1800.severity = suggestion

# CA1801: Review unused parameters
dotnet_diagnostic.CA1801.severity = suggestion

# CA1802: Use literals where appropriate
dotnet_diagnostic.CA1802.severity = suggestion

# CA1805: Do not initialize unnecessarily
dotnet_diagnostic.CA1805.severity = suggestion

# CA1806: Do not ignore method results
dotnet_diagnostic.CA1806.severity = suggestion

# CA1810: Initialize reference type static fields inline
dotnet_diagnostic.CA1810.severity = suggestion

# CA1812: Avoid uninstantiated internal classes
dotnet_diagnostic.CA1812.severity = suggestion

# CA1813: Avoid unsealed attributes
dotnet_diagnostic.CA1813.severity = suggestion

# CA1814: Prefer jagged arrays over multidimensional
dotnet_diagnostic.CA1814.severity = suggestion

# CA1815: Override equals and operator equals on value types
dotnet_diagnostic.CA1815.severity = suggestion

# CA1819: Properties should not return arrays
dotnet_diagnostic.CA1819.severity = suggestion

# CA1820: Test for empty strings using string length
dotnet_diagnostic.CA1820.severity = suggestion

# CA1821: Remove empty Finalizers
dotnet_diagnostic.CA1821.severity = warning

# CA1822: Mark members as static
dotnet_diagnostic.CA1822.severity = suggestion

# CA1823: Avoid unused private fields
dotnet_diagnostic.CA1823.severity = warning

# CA1824: Mark assemblies with NeutralResourcesLanguageAttribute
dotnet_diagnostic.CA1824.severity = suggestion

# CA1825: Avoid zero-length array allocations
dotnet_diagnostic.CA1825.severity = suggestion

# CA1826: Do not use Enumerable methods on indexable collections
dotnet_diagnostic.CA1826.severity = suggestion

# CA1827: Do not use Count() or LongCount() when Any() can be used
dotnet_diagnostic.CA1827.severity = suggestion

# CA1828: Do not use CountAsync() or LongCountAsync() when AnyAsync() can be used
dotnet_diagnostic.CA1828.severity = suggestion

# CA1829: Use Length/Count property instead of Count() when available
dotnet_diagnostic.CA1829.severity = suggestion

# CA1830: Prefer strongly-typed Append and Insert method overloads on StringBuilder
dotnet_diagnostic.CA1830.severity = suggestion

# CA1831: Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.CA1831.severity = suggestion

# CA1832: Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.CA1832.severity = suggestion

# CA1833: Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.CA1833.severity = suggestion

# CA1834: Consider using 'StringBuilder.Append(char)' when applicable
dotnet_diagnostic.CA1834.severity = suggestion

# CA1835: Prefer the 'Memory'-based overloads for 'ReadAsync' and 'WriteAsync'
dotnet_diagnostic.CA1835.severity = suggestion

# CA1836: Prefer IsEmpty over Count
dotnet_diagnostic.CA1836.severity = suggestion

# CA1837: Use 'Environment.ProcessId'
dotnet_diagnostic.CA1837.severity = suggestion

# CA1838: Avoid 'StringBuilder' parameters for P/Invokes
dotnet_diagnostic.CA1838.severity = suggestion

###############################
# Reliability Rules            #
###############################

# CA2000: Dispose objects before losing scope
dotnet_diagnostic.CA2000.severity = suggestion

# CA2002: Do not lock on objects with weak identity
dotnet_diagnostic.CA2002.severity = warning

# CA2008: Do not create tasks without passing a TaskScheduler
dotnet_diagnostic.CA2008.severity = suggestion

# CA2009: Do not call ToImmutableCollection on an ImmutableCollection value
dotnet_diagnostic.CA2009.severity = warning

# CA2011: Avoid infinite recursion
dotnet_diagnostic.CA2011.severity = warning

# CA2012: Use ValueTasks correctly
dotnet_diagnostic.CA2012.severity = suggestion

# CA2013: Do not use ReferenceEquals with value types
dotnet_diagnostic.CA2013.severity = warning

# CA2014: Do not use stackalloc in loops
dotnet_diagnostic.CA2014.severity = warning

# CA2015: Do not define finalizers for types derived from MemoryManager<T>
dotnet_diagnostic.CA2015.severity = warning

# CA2016: Forward the 'CancellationToken' parameter to methods that take one
dotnet_diagnostic.CA2016.severity = suggestion

###############################
# Security Rules               #
###############################

# CA2100: Review SQL queries for security vulnerabilities
dotnet_diagnostic.CA2100.severity = warning

# CA2101: Specify marshaling for P/Invoke string arguments
dotnet_diagnostic.CA2101.severity = suggestion

# CA2109: Review visible event handlers
dotnet_diagnostic.CA2109.severity = suggestion

# CA2119: Seal methods that satisfy private interfaces
dotnet_diagnostic.CA2119.severity = suggestion

# CA2153: Do Not Catch Corrupted State Exceptions
dotnet_diagnostic.CA2153.severity = warning

# CA2300: Do not use insecure deserializer BinaryFormatter
dotnet_diagnostic.CA2300.severity = warning

# CA2301: Do not call BinaryFormatter.Deserialize without first setting BinaryFormatter.Binder
dotnet_diagnostic.CA2301.severity = warning

# CA2302: Ensure BinaryFormatter.Binder is set before calling BinaryFormatter.Deserialize
dotnet_diagnostic.CA2302.severity = warning

###############################
# Usage Rules                  #
###############################

# CA2200: Rethrow to preserve stack details
dotnet_diagnostic.CA2200.severity = warning

# CA2201: Do not raise reserved exception types
dotnet_diagnostic.CA2201.severity = suggestion

# CA2207: Initialize value type static fields inline
dotnet_diagnostic.CA2207.severity = warning

# CA2208: Instantiate argument exceptions correctly
dotnet_diagnostic.CA2208.severity = warning

# CA2211: Non-constant fields should not be visible
dotnet_diagnostic.CA2211.severity = suggestion

# CA2213: Disposable fields should be disposed
dotnet_diagnostic.CA2213.severity = warning

# CA2214: Do not call overridable methods in constructors
dotnet_diagnostic.CA2214.severity = suggestion

# CA2215: Dispose methods should call base class dispose
dotnet_diagnostic.CA2215.severity = warning

# CA2216: Disposable types should declare finalizer
dotnet_diagnostic.CA2216.severity = suggestion

# CA2217: Do not mark enums with FlagsAttribute
dotnet_diagnostic.CA2217.severity = suggestion

# CA2218: Override GetHashCode on overriding Equals
dotnet_diagnostic.CA2218.severity = warning

# CA2219: Do not raise exceptions in finally clauses
dotnet_diagnostic.CA2219.severity = warning

# CA2224: Override Equals on overloading operator equals
dotnet_diagnostic.CA2224.severity = warning

# CA2225: Operator overloads have named alternates
dotnet_diagnostic.CA2225.severity = none

# CA2226: Operators should have symmetrical overloads
dotnet_diagnostic.CA2226.severity = suggestion

# CA2227: Collection properties should be read only
dotnet_diagnostic.CA2227.severity = suggestion

# CA2229: Implement serialization constructors
dotnet_diagnostic.CA2229.severity = suggestion

# CA2231: Overload operator equals on overriding value type Equals
dotnet_diagnostic.CA2231.severity = warning

# CA2234: Pass system uri objects instead of strings
dotnet_diagnostic.CA2234.severity = suggestion

# CA2235: Mark all non-serializable fields
dotnet_diagnostic.CA2235.severity = suggestion

# CA2237: Mark ISerializable types with serializable
dotnet_diagnostic.CA2237.severity = suggestion

# CA2241: Provide correct arguments to formatting methods
dotnet_diagnostic.CA2241.severity = warning

# CA2242: Test for NaN correctly
dotnet_diagnostic.CA2242.severity = warning

# CA2243: Attribute string literals should parse correctly
dotnet_diagnostic.CA2243.severity = suggestion

# CA2244: Do not duplicate indexed element initializations
dotnet_diagnostic.CA2244.severity = warning

# CA2245: Do not assign a property to itself
dotnet_diagnostic.CA2245.severity = warning

# CA2246: Assigning symbol and its member in the same statement
dotnet_diagnostic.CA2246.severity = warning

# CA2247: Argument passed to TaskCompletionSource constructor should be TaskCreationOptions enum instead of TaskContinuationOptions enum
dotnet_diagnostic.CA2247.severity = warning

# CA2248: Provide correct 'enum' argument to 'Enum.HasFlag'
dotnet_diagnostic.CA2248.severity = warning

# CA2249: Consider using 'string.Contains' instead of 'string.IndexOf'
dotnet_diagnostic.CA2249.severity = suggestion