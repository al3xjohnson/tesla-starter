// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TeslaStarter.Infrastructure.Persistence;

#nullable disable

namespace TeslaStarter.Infrastructure.Migrations
{
    [DbContext(typeof(TeslaStarterDbContext))]
    [Migration("20250730211908_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TeslaStarter.Domain.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .HasDatabaseName("ix_users_email");

                    b.HasIndex("ExternalId")
                        .IsUnique()
                        .HasDatabaseName("ix_users_external_id");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("TeslaStarter.Domain.Vehicles.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastSyncedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("LinkedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TeslaAccountId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("VehicleIdentifier")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("TeslaAccountId")
                        .HasDatabaseName("ix_vehicles_tesla_account_id");

                    b.HasIndex("VehicleIdentifier")
                        .HasDatabaseName("ix_vehicles_vehicle_identifier");

                    b.HasIndex("TeslaAccountId", "VehicleIdentifier")
                        .HasDatabaseName("ix_vehicles_tesla_account_id_vehicle_identifier");

                    b.ToTable("vehicles", (string)null);
                });

            modelBuilder.Entity("TeslaStarter.Domain.Users.User", b =>
                {
                    b.OwnsOne("TeslaStarter.Domain.Users.TeslaAccount", "TeslaAccount", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uuid");

                            b1.Property<string>("AccessToken")
                                .HasMaxLength(2000)
                                .HasColumnType("character varying(2000)");

                            b1.Property<bool>("IsActive")
                                .HasColumnType("boolean");

                            b1.Property<DateTime?>("LastSyncedAt")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<DateTime>("LinkedAt")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("RefreshToken")
                                .HasMaxLength(2000)
                                .HasColumnType("character varying(2000)");

                            b1.Property<string>("TeslaAccountId")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<DateTime?>("TokenExpiresAt")
                                .HasColumnType("timestamp with time zone");

                            b1.HasKey("UserId");

                            b1.ToTable("users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("TeslaAccount");
                });
#pragma warning restore 612, 618
        }
    }
}
